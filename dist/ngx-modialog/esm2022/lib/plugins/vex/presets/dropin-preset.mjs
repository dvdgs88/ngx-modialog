import { DROP_IN_TYPE, extend } from '../../../../public_api';
import { DialogFormModal as component, FormDropIn as content } from '../dialog-form-modal';
import { DialogPreset, DialogPresetBuilder } from './dialog-preset';
const DEFAULT_VALUES = {
    component,
    content,
    okBtn: 'OK',
    cancelBtn: 'Cancel'
};
const DEFAULT_SETTERS = [
    'okBtn',
    'cancelBtn',
    'placeholder'
];
/**
 * Data definition
 */
export class DropInPreset extends DialogPreset {
    get showInput() {
        return this.dropInType === DROP_IN_TYPE.prompt;
    }
}
/**
 * A Preset representing all 3 drop ins (alert, prompt, confirm)
 */
export class DropInPresetBuilder extends DialogPresetBuilder {
    constructor(modal, dropInType, defaultValues = undefined) {
        super(modal, extend(extend({ modal, dropInType }, DEFAULT_VALUES), defaultValues || {}), DEFAULT_SETTERS, DropInPreset);
    }
    $$beforeOpen(config) {
        super.$$beforeOpen(config);
        if (config.okBtn) {
            this.addOkButton(config.okBtn);
        }
        switch (config.dropInType) {
            case DROP_IN_TYPE.prompt:
                config.defaultResult = undefined;
                break;
            case DROP_IN_TYPE.confirm:
                if (config.cancelBtn) {
                    this.addCancelButton(config.cancelBtn);
                }
                break;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGluLXByZXNldC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1tb2RpYWxvZy9zcmMvbGliL3BsdWdpbnMvdmV4L3ByZXNldHMvZHJvcGluLXByZXNldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsWUFBWSxFQUVaLE1BQU0sRUFDUCxNQUFNLHdCQUF3QixDQUFDO0FBRWhDLE9BQU8sRUFBRSxlQUFlLElBQUksU0FBUyxFQUFFLFVBQVUsSUFBSSxPQUFPLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMzRixPQUFPLEVBQUUsWUFBWSxFQUFFLG1CQUFtQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFcEUsTUFBTSxjQUFjLEdBQUc7SUFDckIsU0FBUztJQUNULE9BQU87SUFDUCxLQUFLLEVBQUUsSUFBSTtJQUNYLFNBQVMsRUFBRSxRQUFRO0NBQ3BCLENBQUM7QUFFRixNQUFNLGVBQWUsR0FBRztJQUN0QixPQUFPO0lBQ1AsV0FBVztJQUNYLGFBQWE7Q0FDZCxDQUFDO0FBRUY7O0dBRUc7QUFDSCxNQUFNLE9BQU8sWUFBYSxTQUFRLFlBQVk7SUE2QjVDLElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLFVBQVUsS0FBSyxZQUFZLENBQUMsTUFBTSxDQUFDO0lBQ2pELENBQUM7Q0FDRjtBQUVEOztHQUVHO0FBQ0gsTUFBTSxPQUFPLG1CQUFvQixTQUFRLG1CQUFpQztJQXVCeEUsWUFBWSxLQUFZLEVBQUUsVUFBd0IsRUFBRSxnQkFBOEIsU0FBUztRQUN6RixLQUFLLENBQ0gsS0FBSyxFQUNMLE1BQU0sQ0FBTSxNQUFNLENBQUMsRUFBQyxLQUFLLEVBQUUsVUFBVSxFQUFDLEVBQUUsY0FBYyxDQUFDLEVBQUUsYUFBYSxJQUFJLEVBQUUsQ0FBQyxFQUM3RSxlQUFlLEVBQ2YsWUFBWSxDQUNiLENBQUM7SUFDSixDQUFDO0lBRUQsWUFBWSxDQUFDLE1BQW9CO1FBQy9CLEtBQUssQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7UUFFM0IsSUFBSSxNQUFNLENBQUMsS0FBSyxFQUFFO1lBQ2hCLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ2hDO1FBRUQsUUFBUSxNQUFNLENBQUMsVUFBVSxFQUFFO1lBQ3pCLEtBQUssWUFBWSxDQUFDLE1BQU07Z0JBQ3RCLE1BQU0sQ0FBQyxhQUFhLEdBQUcsU0FBUyxDQUFDO2dCQUNqQyxNQUFNO1lBQ1IsS0FBSyxZQUFZLENBQUMsT0FBTztnQkFDdkIsSUFBSSxNQUFNLENBQUMsU0FBUyxFQUFFO29CQUNwQixJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztpQkFDeEM7Z0JBQ0QsTUFBTTtTQUNUO0lBQ0gsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRFJPUF9JTl9UWVBFLFxuICBGbHVlbnRBc3NpZ25NZXRob2QsXG4gIGV4dGVuZFxufSBmcm9tICcuLi8uLi8uLi8uLi9wdWJsaWNfYXBpJztcbmltcG9ydCB7IE1vZGFsIH0gZnJvbSAnLi4vbW9kYWwnO1xuaW1wb3J0IHsgRGlhbG9nRm9ybU1vZGFsIGFzIGNvbXBvbmVudCwgRm9ybURyb3BJbiBhcyBjb250ZW50IH0gZnJvbSAnLi4vZGlhbG9nLWZvcm0tbW9kYWwnO1xuaW1wb3J0IHsgRGlhbG9nUHJlc2V0LCBEaWFsb2dQcmVzZXRCdWlsZGVyIH0gZnJvbSAnLi9kaWFsb2ctcHJlc2V0JztcblxuY29uc3QgREVGQVVMVF9WQUxVRVMgPSB7XG4gIGNvbXBvbmVudCxcbiAgY29udGVudCxcbiAgb2tCdG46ICdPSycsXG4gIGNhbmNlbEJ0bjogJ0NhbmNlbCdcbn07XG5cbmNvbnN0IERFRkFVTFRfU0VUVEVSUyA9IFtcbiAgJ29rQnRuJyxcbiAgJ2NhbmNlbEJ0bicsXG4gICdwbGFjZWhvbGRlcidcbl07XG5cbi8qKlxuICogRGF0YSBkZWZpbml0aW9uXG4gKi9cbmV4cG9ydCBjbGFzcyBEcm9wSW5QcmVzZXQgZXh0ZW5kcyBEaWFsb2dQcmVzZXQge1xuXG4gIC8qKlxuICAgKiB0aGUgbWVzc2FnZSB0byBkaXNwbGF5IG9uIHRoZSBtb2RhbC5cbiAgICovXG4gIG1lc3NhZ2U6IHN0cmluZztcblxuICAvKipcbiAgICogT0sgYnV0dG9uIGNhcHRpb24uXG4gICAqIERlZmF1bHQ6IE9LXG4gICAqIFNldCB0byBmYWxzZSAoJycsIHVuZGVmaW5lZCwgbnVsbCwgZmFsc2UpIHRvIHJlbW92ZSBidXR0b24uXG4gICAqL1xuICBva0J0bjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBDYW5jZWwgYnV0dG9uIGNhcHRpb24uXG4gICAqIERlZmF1bHQ6IENhbmNlbFxuICAgKiBTZXQgdG8gZmFsc2UgKCcnLCB1bmRlZmluZWQsIG51bGwsIGZhbHNlKSB0byByZW1vdmUgYnV0dG9uLlxuICAgKi9cbiAgY2FuY2VsQnRuOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEEgcGxhY2Vob2xkZXIgZm9yIHRoZSBpbnB1dCBlbGVtZW50LlxuICAgKiBWYWxpZCBvbmx5IGZvciBwcm9tcHQgbW9kYWwuXG4gICAqL1xuICBwbGFjZWhvbGRlcjogc3RyaW5nO1xuXG4gIGRyb3BJblR5cGU6IERST1BfSU5fVFlQRTtcblxuICBnZXQgc2hvd0lucHV0KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmRyb3BJblR5cGUgPT09IERST1BfSU5fVFlQRS5wcm9tcHQ7XG4gIH1cbn1cblxuLyoqXG4gKiBBIFByZXNldCByZXByZXNlbnRpbmcgYWxsIDMgZHJvcCBpbnMgKGFsZXJ0LCBwcm9tcHQsIGNvbmZpcm0pXG4gKi9cbmV4cG9ydCBjbGFzcyBEcm9wSW5QcmVzZXRCdWlsZGVyIGV4dGVuZHMgRGlhbG9nUHJlc2V0QnVpbGRlcjxEcm9wSW5QcmVzZXQ+IHtcblxuICAvKipcbiAgICogdGhlIG1lc3NhZ2UgdG8gZGlzcGxheSBvbiB0aGUgbW9kYWwuXG4gICAqL1xuICBtZXNzYWdlOiBGbHVlbnRBc3NpZ25NZXRob2Q8c3RyaW5nLCB0aGlzPjtcblxuICAvKipcbiAgICogVGhlIGRlZmF1bHQgT2sgYnV0dG9uIGNhcHRpb24uXG4gICAqL1xuICBva0J0bjogRmx1ZW50QXNzaWduTWV0aG9kPHN0cmluZywgdGhpcz47XG5cbiAgLyoqXG4gICAqIFRoZSBkZWZhdWx0IENhbmNlbCBidXR0b24gY2FwdGlvbi5cbiAgICovXG4gIGNhbmNlbEJ0bjogRmx1ZW50QXNzaWduTWV0aG9kPHN0cmluZywgdGhpcz47XG5cbiAgLyoqXG4gICAqIEEgcGxhY2Vob2xkZXIgZm9yIHRoZSBpbnB1dCBlbGVtZW50LlxuICAgKiBWYWxpZCBvbmx5IGZvciBwcm9tcHQgbW9kYWwuXG4gICAqL1xuICBwbGFjZWhvbGRlcjogRmx1ZW50QXNzaWduTWV0aG9kPHN0cmluZywgdGhpcz47XG5cbiAgY29uc3RydWN0b3IobW9kYWw6IE1vZGFsLCBkcm9wSW5UeXBlOiBEUk9QX0lOX1RZUEUsIGRlZmF1bHRWYWx1ZXM6IERyb3BJblByZXNldCA9IHVuZGVmaW5lZCkge1xuICAgIHN1cGVyKFxuICAgICAgbW9kYWwsXG4gICAgICBleHRlbmQ8YW55PihleHRlbmQoe21vZGFsLCBkcm9wSW5UeXBlfSwgREVGQVVMVF9WQUxVRVMpLCBkZWZhdWx0VmFsdWVzIHx8IHt9KSxcbiAgICAgIERFRkFVTFRfU0VUVEVSUyxcbiAgICAgIERyb3BJblByZXNldFxuICAgICk7XG4gIH1cblxuICAkJGJlZm9yZU9wZW4oY29uZmlnOiBEcm9wSW5QcmVzZXQpOiB2b2lkIHtcbiAgICBzdXBlci4kJGJlZm9yZU9wZW4oY29uZmlnKTtcblxuICAgIGlmIChjb25maWcub2tCdG4pIHtcbiAgICAgIHRoaXMuYWRkT2tCdXR0b24oY29uZmlnLm9rQnRuKTtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKGNvbmZpZy5kcm9wSW5UeXBlKSB7XG4gICAgICBjYXNlIERST1BfSU5fVFlQRS5wcm9tcHQ6XG4gICAgICAgIGNvbmZpZy5kZWZhdWx0UmVzdWx0ID0gdW5kZWZpbmVkO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgRFJPUF9JTl9UWVBFLmNvbmZpcm06XG4gICAgICAgIGlmIChjb25maWcuY2FuY2VsQnRuKSB7XG4gICAgICAgICAgdGhpcy5hZGRDYW5jZWxCdXR0b24oY29uZmlnLmNhbmNlbEJ0bik7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG59XG4iXX0=