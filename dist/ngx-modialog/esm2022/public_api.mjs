export * from './lib/framework/fluent-assign';
export { extend, arrayUnion, PromiseCompleter } from './lib/framework/utils';
export { createComponent } from './lib/framework/createComponent';
export * from './lib/models/errors';
export { DialogRef } from './lib/models/dialog-ref';
export { DROP_IN_TYPE, OverlayRenderer } from './lib/models/tokens';
export { Modal, DOMOverlayRenderer } from './lib/providers/index';
export { overlayConfigFactory, OverlayContext, OverlayContextBuilder } from './lib/models/overlay-context';
export { Overlay, ModalOverlay, OverlayDialogBoundary, OverlayTarget } from './lib/overlay/index';
export { DEFAULT_VALUES, ModalContext, ModalContextBuilder } from './lib/models/modal-context';
export { ModalOpenContext, ModalOpenContextBuilder } from './lib/models/modal-open-context';
export * from './lib/components/index';
export { ModalModule } from './lib/ngx-modialog.module';
export { VexModalModule } from './lib/vex-modal.module';
export { BSModalContext, BSModalContextBuilder } from './lib/plugins/bootstrap/modal-context';
export { BSModalContainer } from './lib/plugins/bootstrap/modal-container.component';
export { BSMessageModal, BSMessageModalTitle, BSMessageModalBody, BSModalFooter } from './lib/plugins/bootstrap/message-modal.component';
export { MessageModalPresetBuilder } from './lib/plugins/bootstrap/presets/message-modal-preset';
export { OneButtonPresetBuilder } from './lib/plugins/bootstrap/presets/one-button-preset';
export { TwoButtonPresetBuilder, PromptPresetBuilder } from './lib/plugins/bootstrap/presets/two-button-preset';
export { Modal as VexModal, vexV3Mode } from './lib/plugins/vex/modal';
export { VEXModalContext, VEXModalContextBuilder } from './lib/plugins/vex/modal-context';
export { DropInPreset, DropInPresetBuilder } from './lib/plugins/vex/presets/dropin-preset';
export { DialogFormModal, FormDropIn, VEXDialogButtons } from './lib/plugins/vex/dialog-form-modal';
export { DialogPreset, DialogPresetBuilder } from './lib/plugins/vex/presets/dialog-preset';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC1tb2RpYWxvZy9zcmMvcHVibGljX2FwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQSxjQUFjLCtCQUErQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLGdCQUFnQixFQUFTLE1BQU0sdUJBQXVCLENBQUM7QUFDcEYsT0FBTyxFQUFFLGVBQWUsRUFBdUIsTUFBTSxpQ0FBaUMsQ0FBQztBQUV2RixjQUFjLHFCQUFxQixDQUFDO0FBRXBDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUVwRCxPQUFPLEVBQ0wsWUFBWSxFQUVaLGVBQWUsRUFJaEIsTUFBTSxxQkFBcUIsQ0FBQztBQUU3QixPQUFPLEVBQUUsS0FBSyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFbEUsT0FBTyxFQUNMLG9CQUFvQixFQUNwQixjQUFjLEVBQ2QscUJBQXFCLEVBRXRCLE1BQU0sOEJBQThCLENBQUM7QUFFdEMsT0FBTyxFQUNMLE9BQU8sRUFFUCxZQUFZLEVBQ1oscUJBQXFCLEVBQ3JCLGFBQWEsRUFDZCxNQUFNLHFCQUFxQixDQUFDO0FBRTdCLE9BQU8sRUFDTCxjQUFjLEVBQ2QsWUFBWSxFQUNaLG1CQUFtQixFQUNwQixNQUFNLDRCQUE0QixDQUFDO0FBRXBDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBRTVGLGNBQWMsd0JBQXdCLENBQUM7QUFFdkMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV4RCxPQUFPLEVBQXNCLGNBQWMsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ2xILE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ3JGLE9BQU8sRUFDTCxjQUFjLEVBQ2QsbUJBQW1CLEVBQ25CLGtCQUFrQixFQUNsQixhQUFhLEVBR2QsTUFBTSxpREFBaUQsQ0FBQztBQUV6RCxPQUFPLEVBRUwseUJBQXlCLEVBQzFCLE1BQU0sc0RBQXNELENBQUM7QUFFOUQsT0FBTyxFQUFtQixzQkFBc0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQzVHLE9BQU8sRUFFTCxzQkFBc0IsRUFFdEIsbUJBQW1CLEVBQ3BCLE1BQU0sbURBQW1ELENBQUM7QUFFM0QsT0FBTyxFQUFFLEtBQUssSUFBSSxRQUFRLEVBQUUsU0FBUyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkUsT0FBTyxFQUFvQixlQUFlLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM1RyxPQUFPLEVBQUUsWUFBWSxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDNUYsT0FBTyxFQUNMLGVBQWUsRUFDZixVQUFVLEVBSVYsZ0JBQWdCLEVBQ2pCLE1BQU0scUNBQXFDLENBQUM7QUFDN0MsT0FBTyxFQUFFLFlBQVksRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBuZ3gtbW9kaWFsb2dcbiAqL1xuaW1wb3J0IHsgTW9kYWwgfSBmcm9tICcuL2xpYi9wcm92aWRlcnMvaW5kZXgnO1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9mcmFtZXdvcmsvZmx1ZW50LWFzc2lnbic7XG5leHBvcnQgeyBleHRlbmQsIGFycmF5VW5pb24sIFByb21pc2VDb21wbGV0ZXIsIENsYXNzIH0gZnJvbSAnLi9saWIvZnJhbWV3b3JrL3V0aWxzJztcbmV4cG9ydCB7IGNyZWF0ZUNvbXBvbmVudCwgQ3JlYXRlQ29tcG9uZW50QXJncyB9IGZyb20gJy4vbGliL2ZyYW1ld29yay9jcmVhdGVDb21wb25lbnQnO1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9tb2RlbHMvZXJyb3JzJztcblxuZXhwb3J0IHsgRGlhbG9nUmVmIH0gZnJvbSAnLi9saWIvbW9kZWxzL2RpYWxvZy1yZWYnO1xuXG5leHBvcnQge1xuICBEUk9QX0lOX1RZUEUsXG4gIE1vZGFsQ29tcG9uZW50LFxuICBPdmVybGF5UmVuZGVyZXIsXG4gIE92ZXJsYXlDb25maWcsXG4gIENsb3NlR3VhcmQsXG4gIENvbnRhaW5lckNvbnRlbnRcbn0gZnJvbSAnLi9saWIvbW9kZWxzL3Rva2Vucyc7XG5cbmV4cG9ydCB7IE1vZGFsLCBET01PdmVybGF5UmVuZGVyZXIgfSBmcm9tICcuL2xpYi9wcm92aWRlcnMvaW5kZXgnO1xuXG5leHBvcnQge1xuICBvdmVybGF5Q29uZmlnRmFjdG9yeSxcbiAgT3ZlcmxheUNvbnRleHQsXG4gIE92ZXJsYXlDb250ZXh0QnVpbGRlcixcbiAgTW9kYWxDb250cm9sbGluZ0NvbnRleHRCdWlsZGVyXG59IGZyb20gJy4vbGliL21vZGVscy9vdmVybGF5LWNvbnRleHQnO1xuXG5leHBvcnQge1xuICBPdmVybGF5LFxuICBFbWJlZENvbXBvbmVudENvbmZpZyxcbiAgTW9kYWxPdmVybGF5LFxuICBPdmVybGF5RGlhbG9nQm91bmRhcnksXG4gIE92ZXJsYXlUYXJnZXRcbn0gZnJvbSAnLi9saWIvb3ZlcmxheS9pbmRleCc7XG5cbmV4cG9ydCB7XG4gIERFRkFVTFRfVkFMVUVTLFxuICBNb2RhbENvbnRleHQsXG4gIE1vZGFsQ29udGV4dEJ1aWxkZXJcbn0gZnJvbSAnLi9saWIvbW9kZWxzL21vZGFsLWNvbnRleHQnO1xuXG5leHBvcnQgeyBNb2RhbE9wZW5Db250ZXh0LCBNb2RhbE9wZW5Db250ZXh0QnVpbGRlciB9IGZyb20gJy4vbGliL21vZGVscy9tb2RhbC1vcGVuLWNvbnRleHQnO1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9jb21wb25lbnRzL2luZGV4JztcblxuZXhwb3J0IHsgTW9kYWxNb2R1bGUgfSBmcm9tICcuL2xpYi9uZ3gtbW9kaWFsb2cubW9kdWxlJztcbmV4cG9ydCB7IFZleE1vZGFsTW9kdWxlIH0gZnJvbSAnLi9saWIvdmV4LW1vZGFsLm1vZHVsZSc7XG5cbmV4cG9ydCB7IEJvb3RzdHJhcE1vZGFsU2l6ZSwgQlNNb2RhbENvbnRleHQsIEJTTW9kYWxDb250ZXh0QnVpbGRlciB9IGZyb20gJy4vbGliL3BsdWdpbnMvYm9vdHN0cmFwL21vZGFsLWNvbnRleHQnO1xuZXhwb3J0IHsgQlNNb2RhbENvbnRhaW5lciB9IGZyb20gJy4vbGliL3BsdWdpbnMvYm9vdHN0cmFwL21vZGFsLWNvbnRhaW5lci5jb21wb25lbnQnO1xuZXhwb3J0IHtcbiAgQlNNZXNzYWdlTW9kYWwsXG4gIEJTTWVzc2FnZU1vZGFsVGl0bGUsXG4gIEJTTWVzc2FnZU1vZGFsQm9keSxcbiAgQlNNb2RhbEZvb3RlcixcbiAgQlNNZXNzYWdlTW9kYWxCdXR0b25Db25maWcsXG4gIEJTTWVzc2FnZU1vZGFsQnV0dG9uSGFuZGxlclxufSBmcm9tICcuL2xpYi9wbHVnaW5zL2Jvb3RzdHJhcC9tZXNzYWdlLW1vZGFsLmNvbXBvbmVudCc7XG5cbmV4cG9ydCB7XG4gIE1lc3NhZ2VNb2RhbFByZXNldCxcbiAgTWVzc2FnZU1vZGFsUHJlc2V0QnVpbGRlclxufSBmcm9tICcuL2xpYi9wbHVnaW5zL2Jvb3RzdHJhcC9wcmVzZXRzL21lc3NhZ2UtbW9kYWwtcHJlc2V0JztcblxuZXhwb3J0IHsgT25lQnV0dG9uUHJlc2V0LCBPbmVCdXR0b25QcmVzZXRCdWlsZGVyIH0gZnJvbSAnLi9saWIvcGx1Z2lucy9ib290c3RyYXAvcHJlc2V0cy9vbmUtYnV0dG9uLXByZXNldCc7XG5leHBvcnQge1xuICBUd29CdXR0b25QcmVzZXQsXG4gIFR3b0J1dHRvblByZXNldEJ1aWxkZXIsXG4gIFByb21wdFByZXNldCxcbiAgUHJvbXB0UHJlc2V0QnVpbGRlclxufSBmcm9tICcuL2xpYi9wbHVnaW5zL2Jvb3RzdHJhcC9wcmVzZXRzL3R3by1idXR0b24tcHJlc2V0JztcblxuZXhwb3J0IHsgTW9kYWwgYXMgVmV4TW9kYWwsIHZleFYzTW9kZSB9IGZyb20gJy4vbGliL3BsdWdpbnMvdmV4L21vZGFsJztcbmV4cG9ydCB7IFZFWEJ1aWx0SW5UaGVtZXMsIFZFWE1vZGFsQ29udGV4dCwgVkVYTW9kYWxDb250ZXh0QnVpbGRlciB9IGZyb20gJy4vbGliL3BsdWdpbnMvdmV4L21vZGFsLWNvbnRleHQnO1xuZXhwb3J0IHsgRHJvcEluUHJlc2V0LCBEcm9wSW5QcmVzZXRCdWlsZGVyIH0gZnJvbSAnLi9saWIvcGx1Z2lucy92ZXgvcHJlc2V0cy9kcm9waW4tcHJlc2V0JztcbmV4cG9ydCB7XG4gIERpYWxvZ0Zvcm1Nb2RhbCxcbiAgRm9ybURyb3BJbixcbiAgVkVYQnV0dG9uQ2xpY2tFdmVudCxcbiAgVkVYQnV0dG9uQ29uZmlnLFxuICBWRVhCdXR0b25IYW5kbGVyLFxuICBWRVhEaWFsb2dCdXR0b25zXG59IGZyb20gJy4vbGliL3BsdWdpbnMvdmV4L2RpYWxvZy1mb3JtLW1vZGFsJztcbmV4cG9ydCB7IERpYWxvZ1ByZXNldCwgRGlhbG9nUHJlc2V0QnVpbGRlciB9IGZyb20gJy4vbGliL3BsdWdpbnMvdmV4L3ByZXNldHMvZGlhbG9nLXByZXNldCc7XG4iXX0=